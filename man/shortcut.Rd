% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shortcut.R
\name{arg_env}
\alias{arg_env}
\alias{arg_env_}
\alias{arg_expr}
\alias{arg_expr_}
\alias{dots_envs}
\alias{dots_exprs}
\alias{is_forced}
\alias{is_forced_}
\alias{is_literal}
\alias{is_literal_}
\alias{is_missing}
\alias{is_missing_}
\alias{is_promise}
\alias{is_promise_}
\alias{is_default}
\alias{is_default_}
\title{Get information about currently bound arguments.}
\usage{
arg_env(sym, env = arg_env_(quote(sym), environment()))

arg_env_(sym, env = arg_env_(quote(sym), environment()))

arg_expr(sym, env = arg_env_(quote(sym), environment()))

arg_expr_(sym, env = arg_env_(quote(sym), environment()))

dots_envs(...)

dots_exprs(...)

is_forced(...)

is_forced_(syms, envs)

is_literal(...)

is_literal_(syms, envs)

is_missing(...)

is_missing_(syms, envs, recursive = TRUE)

is_promise(...)

is_promise_(syms, envs)

is_default(...)

is_default_(syms, envs = arg_env(syms))
}
\arguments{
\item{sym}{For \code{arg_env}, etc, a bare name (not forced). For the
normally evaluating \code{arg_env_} and so on, \link{name}.}

\item{env}{The environment to search in.}

\item{...}{Bare variable names (for \verb{is_*_}) or expressions (for
\verb{dots_*}). Not forced.}

\item{syms}{A character vector or list of symbols.}

\item{envs}{An environment or list of environments.}

\item{recursive}{Whether to recursively \link{unwrap} before testing for
missingness.}
}
\value{
\code{arg_expr} extracts an expression from a named argument.

\code{dots_exprs(...)} is equivalent to \code{exprs(dots(...))} (which
is nearly equivalent to \code{alist(...)}.)

\code{is_literal(x)} returns TRUE if an argument \code{x} could be a
source literal. Specifically it tests whether \code{x} is bound to a
singleton vector or a \link{missing_value}. This check happens without
forcing \code{x}.

\code{is_missing(...)} checks whether an argument is missing,
without forcing. It is similar to \link{missing} but can take
multiple arguments, and can be called in more situations, such as
from a nested inner function.

\code{is_missing_(syms, envs)} is a normally evouating version
of is_missing.  \code{syms} should be a symbol, character vector or
list of such. \code{envs} should be an environment, or list of
environments. Vector recycling rules apply, so you can call with
a vector of names and one env, or vice versa.

\code{is_promise} returns TRUE if the given variable is bound to
a promise. Not all arguments are bound to promises; byte-compiled
code often omits creating a promise for literal or missing arguments.

\code{is_default} returns a logical vector.
}
\description{
These are shortcut methods for querying current bindings.  For
example, \code{arg_env(x)} is equivalent to \code{env(arg(x))},
\code{is_forced(x, y)} is equivalent to \code{forced(arg_list(x,y))},
\code{dots_exprs(...)} is equivalent to \code{exprs(dots(...))}, and so
on. The shortcut forms skip the construction of the
intermediate \link{quotation} objects.
}
