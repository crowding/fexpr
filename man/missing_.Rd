% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dots.R
\name{list_missing}
\alias{list_missing}
\alias{missing_}
\title{Check for missing_value()s.}
\usage{
list_missing(...)

missing_(x, unwrap = TRUE)
}
\arguments{
\item{unwrap}{Whether to descend through unevaluated promises
using \link{unwrap(x, TRUE)} before deciding if a promise is missing.}
}
\value{
\code{list_missing} A list containing the values of all arguments, including
missing values. That is, \code{list_missing} works like
\code{list}, but does not complain about missing arguments,
instead representing them directly.

a vector of boolean values.
}
\description{
For \code{\link{dots}} and \code{\link{quo}} objects, checks whether the expressions are missing
without evaluating.
}
\details{
For lists, check if they are identical to R's "missing value."

Checking for missing arguments of \code{...}, without forcing, can be
useful if you need to implement array subsetting like \code{`[`},
where a missing argument means to take all indexes on that
dimension.

There is not a good way to emulate \code{`[`}'s behavior in base R;
using \code{list(\dots)} to collect all positional arguments will throw
errors on missing arguments. Meanwile, using
\code{substitute(list(...))[[2]]} gives you the unevaluated arguments,
but stripts them of their environments (breaking hygeine).

Instead, use \code{x <- list_missing(...)}
and \link{missing_}(x) to detect missing arguments.

[[2]: R:[2
}
\seealso{
missing, is_missing
}
