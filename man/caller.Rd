% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/caller.R
\name{caller}
\alias{caller}
\title{Get the caller of an environment (also an environment).}
\usage{
caller(envir = caller(environment()))
}
\arguments{
\item{envir}{The environment to inspect. By default,
the environment from whicn \code{caller} was called.}
}
\value{
The environment in which the function call that created \code{envir}
was called. If that environment cannot be reliably determined, an error is
thrown.

Whenever possible, use \code{\link{arg_env}} instead of \code{caller}. Use
\code{caller} for NSE functions that take no arguments, or to work around
bad NSE in other people's code.

In R, expressions are evaluated in environments; environments are created
by function invocation. In the code

X <- environment()
F <- function() {
 Y <- environment()
 caller(Y)
}
F()

The environment labaled as Y is created by evaluating the function F(), which
occurs in the environment labeled X. We say that X is the caller of Y.

Note that the "caller" is in general different from the "enclosing environment"
which is returned by \code{\link{parent.env}}). It is also different from the
environment in the previous frame of the execution stack. In the case of lazy
evaluation, an environment may be reactivated to compute a lazy argument;
the code in the lazy argument should have the same 'caller' as other code in
its lexical environment, though it has a different activation path.

\code{caller} is a replacement for most uses of \code{\link{parent.frame}}.
There are  several situations, involving closures and/or lazy evaluation, in which
\code{parent.frame} returns incorrect results, or results that are change depending
on what time parent.frame is evaluated.The value returned by caller() should always
remain the same for any particular environment (although caller may throw an error
if the caller can no longer be determined.).
}
\description{
Get the caller of an environment (also an environment).
}
\examples{
# For further examples please see the test cases
# located under inst/tests/test-caller.R
}

