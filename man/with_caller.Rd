% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/caller.R
\name{with_caller}
\alias{with_caller}
\title{Wrap a function so that it will see a particular caller or parent.frame.}
\usage{
with_caller(f, envir = arg_env(f))
}
\arguments{
\item{f}{The function to call. A name or character string may be
used, which should refer to a function visible in the environment
given.}

\item{envir}{The environment to issue the call from. If \code{\link{caller}}
is called within \code{f}, it will return \code{envir}.}
}
\value{
A function wrapper. Calling it will call `f`, but from within `f` a 
call to `parent.frame()` or `caller` will return `envir`. 

call_from(f, e)("foo", "bar") is similar to `eval(quote(f("foo", "bar")), envir=e)`
except that the argument list is applied normally instead of being evaluated 
in the target environment.

A typical use for `with_caller` is to gain some flexibility working with impolite
functions that manipulate their `caller()` or `parent_frame()`
}
\description{
Wrap a function so that it will see a particular caller or parent.frame.
}

