% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/caller.R
\name{get_call}
\alias{get_call}
\alias{get_function}
\title{Get information about currently executing calls.}
\usage{
get_call(env = caller(environment()),
  ifnotfound = stop("get_call: environment not found on stack"))

get_function(env = caller(environment()),
  ifnotfound = stop("get_function: environment not found on stack"))
}
\arguments{
\item{env}{An environment belonging to a currently executing
function call.}

\item{ifnotfound}{If the call is not found, an error is raised, or
optionally this is returned.}
}
\value{
a dots object, the first element of which represents the
call.
}
\description{
\code{get_call()} takes an environment, by default the one in which it
was called, and extracts the function call and arguments assiciated
with the call.  return value is a \code{[dots]} object; the first
element of which represents the calling environment and the name of
the function as it appeared there. The rest of the elements
represent the function args.

\code{get_function(env)} returns the function object associated with a
currently executing call (identified by environment).
}
\details{
The output of \code{\link[=get_call]{get_call()}} can be passed to \link{do(x)} in order to
replicate a call.

\code{get_call} is meant to replace \code{[match.call()]} and \code{[sys.call()]};
its advantage is that it captures the environments attached to
arguments in addition to their written form.
}
\seealso{
do dots caller
}
